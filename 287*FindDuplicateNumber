O(1)solution based on Floyd's cycle detection from Solution:
Trick is to construct the linked list: where if index i and value v_i, next value has index v_i.

def findDuplicate(self, nums: List[int]) -> int:
        tor= nums[0]
        hare = nums[0]
        while True:
            tor = nums[tor]
            hare = nums[nums[hare]]
            if tor == hare:
                break
            
        
        ptr1 = nums[0]
        ptr2 = tor
        while ptr1 != ptr2:
            ptr1 = nums[ptr1]
            ptr2 = nums[ptr2]
        return ptr1
