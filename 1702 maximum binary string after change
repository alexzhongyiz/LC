Observation: there can only be at most 1 zero in the result; if there are no 1 at front and m zeros in total, the only zero comes after (m-1) 1s. Otherwise if there are k 1s,
the first zero comes after k + m-1 1s.
Example: 1010 -> 1001-> 1101
0101 -> 0011 -> 1011
1100 -> 1110

class Solution:
    def maximumBinaryString(self, binary: str) -> str:
        m,N = collections.Counter(binary)["0"], len(binary)
        #print(m,N)
        
        if m <=1:
            return binary
        else:
            i = 0
            while binary[i] == "1":
                i += 1
                
            
            my_list = ['1'*(m-1+i)]+['0']+["1"*( N - m -i)]
            return "".join(my_list)
        
