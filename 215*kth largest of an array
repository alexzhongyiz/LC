# this requires using heapsort:
# detailed explanation: https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/167837/Python-or-tm
#using Max heap:
import heapq
    def findKthLargest(self, nums: List[int], k: int) -> int:
        li = [-num for num in nums]
        heapq.heapify(li)
        for _ in range(k):
            res = heapq.heappop(li)
        return -res
      
#using min heap:

    import heapq
    def findKthLargest(self, nums: List[int], k: int) -> int:
        min_heap = [-float('inf')] * k
        heapq.heapify(min_heap)
        for num in nums:
            if num > min_heap[0]:
                heapq.heappop(min_heap)
                heapq.heappush(min_heap, num)
        return min_heap[0]
      
