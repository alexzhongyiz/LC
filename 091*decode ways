first attempt gives runtime error: not sure why yet.

def numDecodings(self, s: str) -> int:
        l = len(s)
        dp = [0 for i in range(l)]
        if int(s[0]) == 0:
            return 0
        if l == 1:
            return 1
        dp[0] = 1
        if int(s[1]) ==0:
            if int(s[0]) >=3:
                return 0
            else: dp[1] = 1
        else:
            if int (s[:2]) <= 26:
                dp[1] = 2
            else: dp[1] = 1
        
        for i in range(2,l):
            if int(s[i]) == 0:
                if int(s[i-1]) >= 3:
                    return 0
                else:
                    dp[i] = dp[i-2]
            else:
                if int(s[i-1: i+1])<=26:
                    dp[i] = dp[i-1] + dp[i-2]
                else:
                    dp[i] = dp[i-2]
        return dp[-1]
        
        
#my second attempt after 4 months:
O(n) time , O(n) space:

def numDecodings(self, s: str) -> int:
        if not s or s[0]== '0':
            return 0
        if len(s) == 1:
            return 1
        
        dp = [0]* (len(s) + 1)
        dp[0] =dp[1] = 1
        for i in range(1,len(s)):
            if s[i]== '0':
                if s[i - 1] in {'1', '2'}:
                    dp[i + 1] = dp[i -1]
                else:
                    print(dp)
                    return 0
            else:
                if s[i -1] == "0":
                    dp[i + 1] = dp[i]
                elif int(s[i -1: i + 1]) <= 26:
                    dp[ i+ 1] = dp[i] + dp[ i-1]
                else:
                    dp[i + 1] = dp[i]
        print(dp)
        return dp[-1]

Can make this to be O(1) space as we don't need dp[i -1] in any case after dp[i +1] is implemented.

prev is dp[i] and two_ahead is dp[i -1]
def numDecodings(self, s: str) -> int:
        if not s or s[0]== '0':
            return 0
        if len(s) == 1:
            return 1
        
        
        two_ahead = prev = 1
        for i in range(1,len(s)):
            if s[i]== '0':
                if s[i - 1] in {'1', '2'}:
                   
                    two_ahead, prev = prev, two_ahead
                else:
                    #print(dp)
                    return 0
            else:
                if s[i -1] == "0":
                    
                    two_ahead = prev
                elif int(s[i -1: i + 1]) <= 26:
                   
                    prev, two_ahead = prev + two_ahead, prev
                else:
                    
                    two_ahead = prev
        #print(dp)
        #return dp[-1]
        return prev
            
